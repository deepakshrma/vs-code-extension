{
    "prettierrc": {
		"prefix": "prerc",
		"body": [
			"{\n\t\"useTabs\": true,\n\t\"singleQuote\": true,\n\t\"printWidth\": 92,\n\t\"semi\": true,\n\t\"trailingComma\": \"all\"\n}"
		]
    },
    "bashrc": {
		"prefix": "bashrc",
		"body": [
            "alias dkps=\"docker ps\"\nalias dkst=\"docker stats\"\nalias dkpsa=\"docker ps -a\"\nalias dkimgs=\"docker images\"\nalias dkcpup=\"docker-compose up -d\"\nalias dkcpdown=\"docker-compose down\"\nalias dkcpstart=\"docker-compose start\"\nalias dkcpstop=\"docker-compose stop\"\n\n\n### Extras\nexport PATH=\"$PATH:/usr/local/bin/\"\n    export PATH=\"/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:$PATH\"\n\n#   Set Default Editor (change 'Nano' to the editor of your choice)\n#   ------------------------------------------------------------\n    export EDITOR=/usr/bin/nano\n\n#   Set default blocksize for ls, df, du\n#   from this: http://hints.macworld.com/comment.php?mode=view&cid=24491\n#   ------------------------------------------------------------\n    export BLOCKSIZE=1k\n\n#   Add color to terminal\n#   (this is all commented out as I use Mac Terminal Profiles)\n#   from http://osxdaily.com/2012/02/21/add-color-to-the-terminal-in-mac-os-x/\n#   ------------------------------------------------------------\n#   export CLICOLOR=1\n#   export LSCOLORS=ExFxBxDxCxegedabagacad\n\n\n#   -----------------------------\n#   2. MAKE TERMINAL BETTER\n#   -----------------------------\n\nalias cp='cp -iv'                           # Preferred 'cp' implementation\nalias mv='mv -iv'                           # Preferred 'mv' implementation\nalias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation\nalias ll='ls -FGlAhp'                       # Preferred 'ls' implementation\nalias less='less -FSRXc'                    # Preferred 'less' implementation\ncd() { builtin cd \"$@\"; ll; }               # Always list directory contents upon 'cd'\nalias cd..='cd ../'                         # Go back 1 directory level (for fast typers)\nalias ..='cd ../'                           # Go back 1 directory level\nalias ...='cd ../../'                       # Go back 2 directory levels\nalias .3='cd ../../../'                     # Go back 3 directory levels\nalias .4='cd ../../../../'                  # Go back 4 directory levels\nalias .5='cd ../../../../../'               # Go back 5 directory levels\nalias .6='cd ../../../../../../'            # Go back 6 directory levels\nalias edit='subl'                           # edit:         Opens any file in sublime editor\nalias f='open -a Finder ./'                 # f:            Opens current directory in MacOS Finder\nalias ~=\"cd ~\"                              # ~:            Go Home\nalias cl='clear'                             # c:            Clear terminal display\nalias which='type -all'                     # which:        Find executables\nalias path='echo -e ${PATH//:/\\\\n}'         # path:         Echo all executable Paths\nalias show_options='shopt'                  # Show_options: display bash options settings\nalias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screwed up\nalias cic='set completion-ignore-case On'   # cic:          Make tab-completion case-insensitive\nmcd () { mkdir -p \"$1\" && cd \"$1\"; }        # mcd:          Makes new Dir and jumps inside\ntrash () { command mv \"$@\" ~/.Trash ; }     # trash:        Moves a file to the MacOS trash\nql () { qlmanage -p \"$*\" >& /dev/null; }    # ql:           Opens any file in MacOS Quicklook Preview\nalias DT='tee ~/Desktop/terminalOut.txt'    # DT:           Pipe content to file on MacOS Desktop\n\n#   lr:  Full Recursive Directory Listing\n#   ------------------------------------------\nalias lr='ls -R | grep \":$\" | sed -e '\\''s/:$//'\\'' -e '\\''s/[^-][^\\/]*\\//--/g'\\'' -e '\\''s/^/   /'\\'' -e '\\''s/-/|/'\\'' | less'\n\n#   mans:   Search manpage given in agument '1' for term given in argument '2' (case insensitive)\n#           displays paginated result with colored search terms and two lines surrounding each hit.            Example: mans mplayer codec\n#   --------------------------------------------------------------------\n    mans () {\n        man $1 | grep -iC2 --color=always $2 | less\n    }\n\n#   showa: to remind yourself of an alias (given some part of it)\n#   ------------------------------------------------------------\n    showa () { /usr/bin/grep --color=always -i -a1 $@ ~/Library/init/bash/aliases.bash | grep -v '^\\s*$' | less -FSRXc ; }\n\n\n#   -------------------------------\n#   3. FILE AND FOLDER MANAGEMENT\n#   -------------------------------\n\nzipf () { zip -r \"$1\".zip \"$1\" ; }          # zipf:         To create a ZIP archive of a folder\nalias numFiles='echo $(ls -1 | wc -l)'      # numFiles:     Count of non-hidden files in current dir\nalias make1mb='mkfile 1m ./1MB.dat'         # make1mb:      Creates a file of 1mb size (all zeros)\nalias make5mb='mkfile 5m ./5MB.dat'         # make5mb:      Creates a file of 5mb size (all zeros)\nalias make10mb='mkfile 10m ./10MB.dat'      # make10mb:     Creates a file of 10mb size (all zeros)\n\n#   cdf:  'Cd's to frontmost window of MacOS Finder\n#   ------------------------------------------------------\n    cdf () {\n        currFolderPath=$( /usr/bin/osascript <<EOT\n            tell application \"Finder\"\n                try\n            set currFolder to (folder of the front window as alias)\n                on error\n            set currFolder to (path to desktop folder as alias)\n                end try\n                POSIX path of currFolder\n            end tell\nEOT\n        )\n        echo \"cd to \\\"$currFolderPath\\\"\"\n        cd \"$currFolderPath\"\n    }\n\n#   extract:  Extract most know archives with one command\n#   ---------------------------------------------------------\n    extract () {\n        if [ -f $1 ] ; then\n          case $1 in\n            *.tar.bz2)   tar xjf $1     ;;\n            *.tar.gz)    tar xzf $1     ;;\n            *.bz2)       bunzip2 $1     ;;\n            *.rar)       unrar e $1     ;;\n            *.gz)        gunzip $1      ;;\n            *.tar)       tar xf $1      ;;\n            *.tbz2)      tar xjf $1     ;;\n            *.tgz)       tar xzf $1     ;;\n            *.zip)       unzip $1       ;;\n            *.Z)         uncompress $1  ;;\n            *.7z)        7z x $1        ;;\n            *)     echo \"'$1' cannot be extracted via extract()\" ;;\n             esac\n         else\n             echo \"'$1' is not a valid file\"\n         fi\n    }\n\n\n#   ---------------------------\n#   4. SEARCHING\n#   ---------------------------\n\nalias qfind=\"find . -name \"                 # qfind:    Quickly search for file\nff () { /usr/bin/find . -name \"$@\" ; }      # ff:       Find file under the current directory\nffs () { /usr/bin/find . -name \"$@\"'*' ; }  # ffs:      Find file whose name starts with a given string\nffe () { /usr/bin/find . -name '*'\"$@\" ; }  # ffe:      Find file whose name ends with a given string\n\n#   spotlight: Search for a file using MacOS Spotlight's metadata\n#   -----------------------------------------------------------\n    spotlight () { mdfind \"kMDItemDisplayName == '$@'wc\"; }\n\n\n#   ---------------------------\n#   5. PROCESS MANAGEMENT\n#   ---------------------------\n\n#   findPid: find out the pid of a specified process\n#   -----------------------------------------------------\n#       Note that the command name can be specified via a regex\n#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'\n#       Without the 'sudo' it will only find processes of the current user\n#   -----------------------------------------------------\n    findPid () { lsof -t -c \"$@\" ; }\n\n#   memHogsTop, memHogsPs:  Find memory hogs\n#   -----------------------------------------------------\n    alias memHogsTop='top -l 1 -o rsize | head -20'\n    alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'\n\n#   cpuHogs:  Find CPU hogs\n#   -----------------------------------------------------\n    alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'\n\n#   topForever:  Continual 'top' listing (every 10 seconds)\n#   -----------------------------------------------------\n    alias topForever='top -l 9999999 -s 10 -o cpu'\n\n#   ttop:  Recommended 'top' invocation to minimize resources\n#   ------------------------------------------------------------\n#       Taken from this macosxhints article\n#       http://www.macosxhints.com/article.php?story=20060816123853639\n#   ------------------------------------------------------------\n    alias ttop=\"top -R -F -s 10 -o rsize\"\n\n#   my_ps: List processes owned by my user:\n#   ------------------------------------------------------------\n    my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }\n\n\n#   ---------------------------\n#   6. NETWORKING\n#   ---------------------------\n\nalias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address\nalias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets\nalias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache\nalias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets\nalias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets\nalias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets\nalias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0\nalias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1\nalias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections\nalias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs\n\n#   ii:  display useful host related informaton\n#   -------------------------------------------------------------------\n    ii() {\n        echo -e \"\\nYou are logged on ${RED}$HOST\"\n        echo -e \"\\nAdditionnal information:$NC \" ; uname -a\n        echo -e \"\\n${RED}Users logged on:$NC \" ; w -h\n        echo -e \"\\n${RED}Current date :$NC \" ; date\n        echo -e \"\\n${RED}Machine stats :$NC \" ; uptime\n        echo -e \"\\n${RED}Current network location :$NC \" ; scselect\n        echo -e \"\\n${RED}Public facing IP Address :$NC \" ;myip\n        #echo -e \"\\n${RED}DNS Configuration:$NC \" ; scutil --dns\n        echo\n    }\n\n\n#   ---------------------------------------\n#   7. SYSTEMS OPERATIONS & INFORMATION\n#   ---------------------------------------\n\nalias mountReadWrite='/sbin/mount -uw /'    # mountReadWrite:   For use when booted into single-user\n\n#   cleanupDS:  Recursively delete .DS_Store files\n#   -------------------------------------------------------------------\n    alias cleanupDS=\"find . -type f -name '*.DS_Store' -ls -delete\"\n\n#   finderShowHidden:   Show hidden files in Finder\n#   finderHideHidden:   Hide hidden files in Finder\n#   -------------------------------------------------------------------\n    alias finderShowHidden='defaults write com.apple.finder ShowAllFiles TRUE'\n    alias finderHideHidden='defaults write com.apple.finder ShowAllFiles FALSE'\n\n#   cleanupLS:  Clean up LaunchServices to remove duplicates in the \"Open With\" menu\n#   -----------------------------------------------------------------------------------\n    alias cleanupLS=\"/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder\"\n\n#    screensaverDesktop: Run a screensaver on the Desktop\n#   -----------------------------------------------------------------------------------\n    alias screensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'\n\n#   ---------------------------------------\n#   8. WEB DEVELOPMENT\n#   ---------------------------------------\n\nalias apacheEdit='sudo edit /etc/httpd/httpd.conf'      # apacheEdit:       Edit httpd.conf\nalias apacheRestart='sudo apachectl graceful'           # apacheRestart:    Restart Apache\nalias editHosts='sudo edit /etc/hosts'                  # editHosts:        Edit /etc/hosts file\nalias herr='tail /var/log/httpd/error_log'              # herr:             Tails HTTP error logs\nalias apacheLogs=\"less +F /var/log/apache2/error_log\"   # Apachelogs:   Shows apache error logs\nhttpHeaders () { /usr/bin/curl -I -L $@ ; }             # httpHeaders:      Grabs headers from web page\n\n#   httpDebug:  Download a web page and show info on what took time\n#   -------------------------------------------------------------------\n    httpDebug () { /usr/bin/curl $@ -o /dev/null -w \"dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\\n\" ; }\n\n\n#   ---------------------------------------\n#   9. REMINDERS & NOTES\n#   ---------------------------------------\n\n#   remove_disk: spin down unneeded disk\n#   ---------------------------------------\n#   diskutil eject /dev/disk1s3\n\n#   to change the password on an encrypted disk image:\n#   ---------------------------------------\n#   hdiutil chpass /path/to/the/diskimage\n\n#   to mount a read-only disk image as read-write:\n#   ---------------------------------------\n#   hdiutil attach example.dmg -shadow /tmp/example.shadow -noverify\n\n#   mounting a removable drive (of type msdos or hfs)\n#   ---------------------------------------\n#   mkdir /Volumes/Foo\n#   ls /dev/disk*   to find out the device to use in the mount command)\n#   mount -t msdos /dev/disk1s1 /Volumes/Foo\n#   mount -t hfs /dev/disk1s1 /Volumes/Foo\n\n#   to create a file of a given size: /usr/sbin/mkfile or /usr/bin/hdiutil\n#   ---------------------------------------\n#   e.g.: mkfile 10m 10MB.dat\n#   e.g.: hdiutil create -size 10m 10MB.dmg\n#   the above create files that are almost all zeros - if random bytes are desired\n#   then use: ~/Dev/Perl/randBytes 1048576 > 10MB.dat\n\n#Alias\nalias npmi='npm i'\nalias npmg='npm i -g'\nalias npmd='npm i --save-dev'\n\nalias gs='git status'\nalias gcd='git checkout'\nalias gp='git pull'\nalias gps='git push'\nalias gpo='git pull origin'\nalias gpso='git push origin'\n\nalias hide-folder=\"defaults write com.apple.finder AppleShowAllFiles NO && launch-finder\"\nalias show-folder=\"defaults write com.apple.finder AppleShowAllFiles YES && launch-finder\"\nalias launch-finder=\"killall Finder\""
        ]
    }
}